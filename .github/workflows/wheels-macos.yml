name: wheels-macos

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      # Python "driver" (non influisce sui cp target)
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install build tools
        run: |
          python -m pip install -U cibuildwheel aqtinstall

      - name: Install Qt SDK via aqt
        run: |
          aqt install-qt mac desktop 6.9.0 clang_64 -O "$RUNNER_TEMP/Qt"
          echo "QT6_DIR=$RUNNER_TEMP/Qt/6.9.0/macos/lib/cmake/Qt6" >> $GITHUB_ENV

      - name: Build wheels (macOS arm64, cp311/cp312/cp313)
        env:
          # Indica a scikit-build-core di passare Qt6_DIR a CMake
          SKBUILD_CMAKE_ARGS: "-DQt6_DIR=${{ env.QT6_DIR }}"
          # Non vogliamo delocate: i framework si cercano da PySide6 nel venv
          CIBW_REPAIR_WHEEL_COMMAND: ""
          # RPATH relativi gi√† gestiti dal tuo CMake
          FITWVB_VENDORIZE: "1"
          # Log utili in caso di problemi
          CIBW_BUILD_VERBOSITY: "1"
          SKBUILD_CONFIGURE_LOG: "1"
          SKBUILD_BUILD_LOG: "1"
        run: python -m cibuildwheel --output-dir dist

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: dist/*.whl
      
      - name: Build sdist (optional)
        run: python -m pip install build && python -m build --sdist

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
